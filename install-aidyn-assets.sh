#!/bin/bash
set -e

echo "üé® Installation des Assets AIDYN - MCP-Hub"
echo "==========================================="

# Variables
FRONTEND_DIR="frontend"
FONTS_DIR="$FRONTEND_DIR/public/fonts"
ICONS_DIR="$FRONTEND_DIR/public/icons"
ILLUSTRATIONS_DIR="$FRONTEND_DIR/public/media/illustrations"
LOTTIE_DIR="$FRONTEND_DIR/public/media/lottie"
TOKENS_FILE="$FRONTEND_DIR/src/styles/tokens/design-tokens.json"

# Fonction pour v√©rifier si un fichier existe
check_file() {
    if [ -f "$1" ]; then
        echo "‚úÖ $1 trouv√©"
        return 0
    else
        echo "‚ùå $1 manquant"
        return 1
    fi
}

# Fonction pour cr√©er un r√©pertoire s'il n'existe pas
ensure_dir() {
    if [ ! -d "$1" ]; then
        mkdir -p "$1"
        echo "üìÅ Cr√©√©: $1"
    fi
}

echo ""
echo "üìã 1) V√©rification de la structure..."
ensure_dir "$FONTS_DIR"
ensure_dir "$ICONS_DIR"
ensure_dir "$ILLUSTRATIONS_DIR"
ensure_dir "$LOTTIE_DIR"

echo ""
echo "üîç 2) V√©rification des assets AIDYN..."

# V√©rification des polices
echo "üìù Polices AIDYN:"
FONTS_MISSING=0
check_file "$FONTS_DIR/aidyn-sans-light.woff2" || FONTS_MISSING=1
check_file "$FONTS_DIR/aidyn-sans-regular.woff2" || FONTS_MISSING=1
check_file "$FONTS_DIR/aidvitneum-medium.woff2" || FONTS_MISSING=1

# V√©rification des ic√¥nes PWA
echo ""
echo "üéØ Ic√¥nes PWA:"
ICONS_MISSING=0
for size in 72 96 128 144 152 192 384 512; do
    check_file "$ICONS_DIR/icon-${size}x${size}.png" || ICONS_MISSING=1
done

# V√©rification du fichier de tokens
echo ""
echo "üîß Design Tokens:"
check_file "$TOKENS_FILE" || echo "‚ÑπÔ∏è Design tokens par d√©faut utilis√©s"

echo ""
echo "üöÄ 3) Test du build..."
cd "$FRONTEND_DIR"

# Installation des d√©pendances si n√©cessaire
if [ ! -d "node_modules" ]; then
    echo "üì¶ Installation des d√©pendances..."
    npm ci --no-audit --no-fund
fi

# Build du projet
echo "üèóÔ∏è Build du frontend..."
npm run build

echo ""
echo "üê≥ 4) Test Docker..."
cd ..

# Build et d√©marrage du container
echo "üî® Build de l'image Docker..."
docker compose build frontend

echo "üöÄ D√©marrage du container..."
docker compose up -d frontend

# Test du health check
echo "üíö Test du health check..."
sleep 5
if curl -sf http://localhost/health > /dev/null; then
    echo "‚úÖ Health check OK"
else
    echo "‚ö†Ô∏è Health check √©chou√©"
fi

echo ""
echo "üìä 5) R√©sum√© de l'installation:"
echo "================================"

if [ $FONTS_MISSING -eq 0 ]; then
    echo "‚úÖ Polices AIDYN: Toutes pr√©sentes"
else
    echo "‚ö†Ô∏è Polices AIDYN: Manquantes - D√©posez les .woff2 dans $FONTS_DIR/"
fi

if [ $ICONS_MISSING -eq 0 ]; then
    echo "‚úÖ Ic√¥nes PWA: Toutes pr√©sentes"
else
    echo "‚ö†Ô∏è Ic√¥nes PWA: Manquantes - D√©posez les .png dans $ICONS_DIR/"
fi

echo "‚úÖ Frontend build: R√©ussi"
echo "‚úÖ Docker: Op√©rationnel"

echo ""
echo "üîó URLs de test:"
echo "  - Production: http://localhost/"
echo "  - Style Guide: http://localhost/style-guide"
echo "  - Health: http://localhost/health"

echo ""
if [ $FONTS_MISSING -eq 1 ] || [ $ICONS_MISSING -eq 1 ]; then
    echo "üìå Actions requises:"
    [ $FONTS_MISSING -eq 1 ] && echo "  1. D√©poser les polices AIDYN (.woff2) dans $FONTS_DIR/"
    [ $ICONS_MISSING -eq 1 ] && echo "  2. D√©poser les ic√¥nes PWA (.png) dans $ICONS_DIR/"
    echo "  3. Relancer: ./install-aidyn-assets.sh"
else
    echo "üéâ Installation AIDYN compl√®te! Le frontend est pr√™t."
fi

echo ""
echo "üìã Pour plus de d√©tails, consultez CHECKLIST.md"